---
- name: Uninstall old Docker
  apt: "name={{ item }} state=absent"
  with_items: "{{ docker_old_packages }}"

- name: Update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: Ensure dependences is installed
  apt: "name={{ item }} state={{ docker_dep_packages_state }}"
  with_items: "{{ docker_deps }}"

# - name: Download Docker's official GPG key
#   get_url:  "url={{ docker_gpg_key_url }} dest={{ docker_gpg_key_file }}"
# get_url doesn't work on ubuntu 14.04 so I use curl instead
- name: Download Docker's official GPG key
  shell: curl -fsSL -o {{ docker_gpg_key_file }} {{ docker_gpg_key_url }}

- name: Add Docker's official GPG key
  apt_key: "file={{ docker_gpg_key_file }}"

- name: Create docker_repo_suffix variable
  set_fact:
    docker_repo_suffix: "{{ docker_repo_suffix_map[docker_type] }}"

- name: Add Docker's official repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} {{ docker_repo_suffix }}"

- name: Send pkg_version.sh to remote for get the pakcage version string
  copy: "src=pkg_version.sh dest=/tmp/pkg_version.sh mode=0755"

- name: Guess the package version string
  shell: "/tmp/pkg_version.sh {{ docker_package }}  {{ docker_version }}"
  register: __docker_pkg_version

- name: Ensure Docker is installed
  apt: "name={{ docker_package }}={{ __docker_pkg_version.stdout }} state={{ docker_package_state }} update_cache=yes"
